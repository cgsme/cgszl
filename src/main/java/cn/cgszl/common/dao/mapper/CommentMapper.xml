<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cgszl.common.dao.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.cgszl.common.dao.pojo.Comment">
        <constructor>
            <idArg column="coid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="aid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="author_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="owner_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="mail" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="ip" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="agent" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="parent" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.cgszl.common.dao.pojo.Comment">
        <constructor>
            <idArg column="coid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="aid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="author_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="owner_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="mail" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="ip" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="agent" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="parent" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        </constructor>
    </resultMap>
    <!--自关联查询-->
    <resultMap id="ResultMapWithBLOBsAndChildren" type="cn.cgszl.common.dao.pojo.Comment">
        <id column="coid" property="coid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="aid" column="aid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="created" column="created" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="author" column="author" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="authorId" column="author_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="ownerId" column="owner_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="mail" column="mail" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="url" column="url" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ip" column="ip" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="agent" column="agent" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="parent" column="parent" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="content" column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        <collection property="commentList" column="parent" ofType="cn.cgszl.common.dao.pojo.Comment">
            <id property="coid" column="ccoid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="aid" column="caid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="created" column="ccreated" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="author" column="cauthor" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="authorId" column="cauthor_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="ownerId" column="cowner_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="mail" column="cmail" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="url" column="curl" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="ip" column="cip" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="agent" column="cagent" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="type" column="ctype" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="status" column="cstatus" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result property="parent" column="cparent" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <result property="content" column="ccontent" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        coid, aid, created, author, author_id, owner_id, mail, url, ip, agent, type, status,
        parent
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="cn.cgszl.common.dao.pojo.CommentExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="cn.cgszl.common.dao.pojo.CommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_comments
        where coid = #{coid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM t_comments
        WHERE coid = #{coid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.cgszl.common.dao.pojo.CommentExample">
        delete from t_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.cgszl.common.dao.pojo.Comment">
        INSERT INTO t_comments (coid, aid, created,
                                author, author_id, owner_id,
                                mail, url, ip, agent,
                                type, status, parent,
                                content)
        VALUES (#{coid,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{created,jdbcType=INTEGER},
                                          #{author,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER},
                                          #{ownerId,jdbcType=INTEGER},
                                          #{mail,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},
                                          #{agent,jdbcType=VARCHAR},
                                          #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
                #{parent,jdbcType=INTEGER},
                #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.cgszl.common.dao.pojo.Comment">
        insert into t_comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="coid != null">
                coid,
            </if>
            <if test="aid != null">
                aid,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="mail != null">
                mail,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="agent != null">
                agent,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="parent != null">
                parent,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="coid != null">
                #{coid,jdbcType=INTEGER},
            </if>
            <if test="aid != null">
                #{aid,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                #{created,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=INTEGER},
            </if>
            <if test="mail != null">
                #{mail,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="agent != null">
                #{agent,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.cgszl.common.dao.pojo.CommentExample" resultType="java.lang.Long">
        select count(*) from t_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_comments
        <set>
            <if test="record.coid != null">
                coid = #{record.coid,jdbcType=INTEGER},
            </if>
            <if test="record.aid != null">
                aid = #{record.aid,jdbcType=INTEGER},
            </if>
            <if test="record.created != null">
                created = #{record.created,jdbcType=INTEGER},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.authorId != null">
                author_id = #{record.authorId,jdbcType=INTEGER},
            </if>
            <if test="record.ownerId != null">
                owner_id = #{record.ownerId,jdbcType=INTEGER},
            </if>
            <if test="record.mail != null">
                mail = #{record.mail,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.agent != null">
                agent = #{record.agent,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.parent != null">
                parent = #{record.parent,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_comments
        set coid = #{record.coid,jdbcType=INTEGER},
        aid = #{record.aid,jdbcType=INTEGER},
        created = #{record.created,jdbcType=INTEGER},
        author = #{record.author,jdbcType=VARCHAR},
        author_id = #{record.authorId,jdbcType=INTEGER},
        owner_id = #{record.ownerId,jdbcType=INTEGER},
        mail = #{record.mail,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        agent = #{record.agent,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        parent = #{record.parent,jdbcType=INTEGER},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_comments
        set coid = #{record.coid,jdbcType=INTEGER},
        aid = #{record.aid,jdbcType=INTEGER},
        created = #{record.created,jdbcType=INTEGER},
        author = #{record.author,jdbcType=VARCHAR},
        author_id = #{record.authorId,jdbcType=INTEGER},
        owner_id = #{record.ownerId,jdbcType=INTEGER},
        mail = #{record.mail,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        agent = #{record.agent,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        parent = #{record.parent,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.cgszl.common.dao.pojo.Comment">
        update t_comments
        <set>
            <if test="aid != null">
                aid = #{aid,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=INTEGER},
            </if>
            <if test="mail != null">
                mail = #{mail,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="agent != null">
                agent = #{agent,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where coid = #{coid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.cgszl.common.dao.pojo.Comment">
        UPDATE t_comments
        SET aid       = #{aid,jdbcType=INTEGER},
            created   = #{created,jdbcType=INTEGER},
            author    = #{author,jdbcType=VARCHAR},
            author_id = #{authorId,jdbcType=INTEGER},
            owner_id  = #{ownerId,jdbcType=INTEGER},
            mail      = #{mail,jdbcType=VARCHAR},
            url       = #{url,jdbcType=VARCHAR},
            ip        = #{ip,jdbcType=VARCHAR},
            agent     = #{agent,jdbcType=VARCHAR},
            type      = #{type,jdbcType=VARCHAR},
            status    = #{status,jdbcType=VARCHAR},
            parent    = #{parent,jdbcType=INTEGER},
            content   = #{content,jdbcType=LONGVARCHAR}
        WHERE coid = #{coid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.cgszl.common.dao.pojo.Comment">
        UPDATE t_comments
        SET aid       = #{aid,jdbcType=INTEGER},
            created   = #{created,jdbcType=INTEGER},
            author    = #{author,jdbcType=VARCHAR},
            author_id = #{authorId,jdbcType=INTEGER},
            owner_id  = #{ownerId,jdbcType=INTEGER},
            mail      = #{mail,jdbcType=VARCHAR},
            url       = #{url,jdbcType=VARCHAR},
            ip        = #{ip,jdbcType=VARCHAR},
            agent     = #{agent,jdbcType=VARCHAR},
            type      = #{type,jdbcType=VARCHAR},
            status    = #{status,jdbcType=VARCHAR},
            parent    = #{parent,jdbcType=INTEGER}
        WHERE coid = #{coid,jdbcType=INTEGER}
    </update>

    <!-- 自关联查询 -->
    <select id="selectByArticleKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBsAndChildren">
        SELECT
            a.coid,
            a.aid,
            a.created,
            a.author,
            a.author_id,
            a.owner_id,
            a.mail,
            a.url,
            a.ip,
            a.agent,
            a.type,
            a.status,
            a.parent,
            a.content,
            b.coid      ccoid,
            b.aid       caid,
            b.created   ccreated,
            b.author    cauthor,
            b.author_id cauthor_id,
            b.owner_id  cowner_id,
            b.mail      cmail,
            b.url       curl,
            b.ip        cip,
            b.agent     cagent,
            b.type      ctype,
            b.status    cstatus,
            b.parent    cparent,
            b.content   ccontent
        FROM t_comments a LEFT JOIN t_comments b ON a.parent = b.coid
        WHERE a.aid = #{aid}
              AND a.status = "approved"
              AND b.status = "approved"
        ORDER BY a.created ASC, b.created DESC
    </select>

    <!-- 查询没有父评论的记录 -->
    <select id="listCommentsByAid" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM t_comments
        WHERE aid = #{aid}
        AND status = "approved"
        AND parent = 0
        ORDER BY created ASC
    </select>


</mapper>